{"version":3,"sources":["../../../api/v1/helpers/productshelper.js"],"names":["Product","db","ProductHelper","product","create","newProduct","findAll","products","id","findByPk","name","findOne","where","description","price","quantity","minimumQuantity","imgUrl","update","returning","updatedProduct","destroy","deletedProduct","newQuantity","updatedQuantity","text","query","replacements","prodSales"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEQA,O,GAAYC,gB,CAAZD,O;;IAEaE,a;;;;;;;;2GACQC,O;;;;;;;uBACAH,QAAQI,MAAR,CAAeD,OAAf,C;;;AAAnBE,0B;iDACCA,U;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIgBL,QAAQM,OAAR,E;;;AAAjBC,wB;kDACCA,Q;;;;;;;;;;;;;;;;;;;6GAGmBC,E;;;;;;;uBACJR,QAAQS,QAAR,CAAiBD,EAAjB,C;;;AAAhBL,uB;kDACCA,O;;;;;;;;;;;;;;;;;;;6GAGqBO,I;;;;;;;uBACNV,QAAQW,OAAR,CAAgB;AACpCC,yBAAO,EAAEF,UAAF;AAD6B,iBAAhB,C;;;AAAhBP,uB;kDAGCA,O;;;;;;;;;;;;;;;;;;;6GAGkBK,E,EAAIL,O;;;;;;AAE3BO,oB,GACEP,O,CADFO,I,EAAMG,W,GACJV,O,CADIU,W,EAAaC,K,GACjBX,O,CADiBW,K,EAAOC,Q,GACxBZ,O,CADwBY,Q,EAAUC,e,GAClCb,O,CADkCa,e,EAAiBC,M,GACnDd,O,CADmDc,M;;uBAE1BjB,QAAQkB,MAAR,CAAe;AAC1CR,4BAD0C,EACpCG,wBADoC,EACvBC,YADuB,EAChBC,kBADgB,EACNC,gCADM,EACWC;AADX,iBAAf,EAE1B;AACDE,6BAAW,IADV;AAEDP,yBAAO,EAAEJ,MAAF;AAFN,iBAF0B,C;;;AAAvBY,8B;kDAMCA,eAAe,CAAf,C;;;;;;;;;;;;;;;;;;;6GAGkBZ,E;;;;;;;uBACIR,QAAQqB,OAAR,CAAgB;AAC3CT,yBAAO,EAAEJ,MAAF;AADoC,iBAAhB,C;;;AAAvBc,8B;kDAGCA,c;;;;;;;;;;;;;;;;;;;6GAG0Bd,E,EAAIe,W;;;;;;;uBACPvB,QAAQkB,MAAR,CAAe;AAC3CH,4BAAUQ;AADiC,iBAAf,EAE3B;AACDX,yBAAO,EAAEJ,MAAF;AADN,iBAF2B,C;;;AAAxBgB,+B;kDAKCA,e;;;;;;;;;;;;;;;;;;;6GAGoBhB,E;;;;;;AACrBiB,oB;;uBAGkBxB,iBAAGyB,KAAH,CAASD,IAAT,EAAe,EAAEE,cAAc,CAACnB,EAAD,CAAhB,EAAf,C;;;AAAlBoB,yB;kDACCA,S;;;;;;;;;;;;;;;;;;;;kBAzDU1B,a","file":"productshelper.js","sourcesContent":["import db from '../models';\n\nconst { Product } = db;\n\nexport default class ProductHelper {\n  static async createProduct(product) {\n    const newProduct = await Product.create(product);\n    return newProduct;\n  }\n\n  static async getAllProducts() {\n    const products = await Product.findAll();\n    return products;\n  }\n\n  static async getProductById(id) {\n    const product = await Product.findByPk(id);\n    return product;\n  }\n\n  static async getProductByName(name) {\n    const product = await Product.findOne({\n      where: { name },\n    });\n    return product;\n  }\n\n  static async updateProduct(id, product) {\n    const {\n      name, description, price, quantity, minimumQuantity, imgUrl,\n    } = product;\n    const updatedProduct = await Product.update({\n      name, description, price, quantity, minimumQuantity, imgUrl,\n    }, {\n      returning: true,\n      where: { id },\n    });\n    return updatedProduct[1];\n  }\n\n  static async deleteProduct(id) {\n    const deletedProduct = await Product.destroy({\n      where: { id },\n    });\n    return deletedProduct;\n  }\n\n  static async updateProductQuantity(id, newQuantity) {\n    const updatedQuantity = await Product.update({\n      quantity: newQuantity,\n    }, {\n      where: { id },\n    });\n    return updatedQuantity;\n  }\n\n  static async getProductSales(id) {\n    const text = `SELECT p.id, p.name, p.price, s.quantity_sold, s.total,\n    s.sold_at FROM Products p INNER JOIN Sales s ON p.id = s.product_id\n    WHERE p.id = ?`;\n    const prodSales = await db.query(text, { replacements: [id] });\n    return prodSales;\n  }\n}\n"]}