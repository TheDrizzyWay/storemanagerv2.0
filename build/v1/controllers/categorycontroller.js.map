{"version":3,"sources":["../../../api/v1/controllers/categorycontroller.js"],"names":["CategoryController","req","res","category","body","CategoryHelper","createCategory","result","status","send","success","message","data","getAllCategories","length","id","params","getCategoryById","name","updateCategory","findCategory","deleteCategory"],"mappings":"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","file":"categorycontroller.js","sourcesContent":["import CategoryHelper from '../helpers/categorieshelper';\n\nexport default class CategoryController {\n  static async createCategory(req, res) {\n    const category = req.body;\n    try {\n      const result = await CategoryHelper.createCategory(category);\n      return res.status(201).send({\n        success: true,\n        message: 'Category created successfully.',\n        data: result,\n      });\n    } catch (error) {\n      return res.status(500).send({ success: false, message: error.message });\n    }\n  }\n\n  static async getAllCategories(req, res) {\n    try {\n      const result = await CategoryHelper.getAllCategories();\n      if (result.length === 0) {\n        return res.status(200).send({ success: false, message: 'No categories available yet' });\n      }\n      return res.status(200).send({ success: true, data: result });\n    } catch (error) {\n      return res.status(500).send({ success: false, message: error.message });\n    }\n  }\n\n  static async getCategoryById(req, res) {\n    try {\n      const { id } = req.params;\n      const result = await CategoryHelper.getCategoryById(id);\n      if (!result) {\n        return res.status(400).send({ success: false, message: 'Category not found' });\n      }\n      return res.status(200).send({ success: true, data: result });\n    } catch (error) {\n      return res.status(500).send({ success: false, message: error.message });\n    }\n  }\n\n  static async updateCategory(req, res) {\n    const { id } = req.params;\n    try {\n      const category = await CategoryHelper.getCategoryById(id);\n      if (!category) {\n        return res.status(400).send({ success: false, message: 'Category not found.' });\n      }\n      category.name = req.body.name;\n      const result = await CategoryHelper.updateCategory(id, category);\n      return res.status(200).send({\n        success: true,\n        message: 'Category updated successfully',\n        data: result,\n      });\n    } catch (error) {\n      return res.status(500).send({ success: false, message: error.message });\n    }\n  }\n\n  static async deleteCategory(req, res) {\n    try {\n      const { id } = req.params;\n      const findCategory = await CategoryHelper.getCategoryById(id);\n      if (!findCategory) {\n        return res.status(400).send({ success: false, message: 'Category not found.' });\n      }\n      await CategoryHelper.deleteCategory(id);\n      return res.status(200).send({ success: true, message: 'Category deleted successfully.' });\n    } catch (error) {\n      return res.status(500).send({ success: false, message: error.message });\n    }\n  }\n}\n"]}