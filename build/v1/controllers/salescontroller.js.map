{"version":3,"sources":["../../../api/v1/controllers/salescontroller.js"],"names":["createSale","req","res","counter","sales","body","productLength","length","resultArray","forEach","sale","productId","newQuantity","newSale","Sale","result","Product","updateProductQuantity","push","status","send","success","message","data","getAllSales","user","id","role","getAllSalesAdmin","getAllSalesAttendant","getSaleById","params"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;kBAEe;AACbA,cAAY,oBAACC,GAAD,EAAMC,GAAN,EAAc;AACxB,QAAIC,UAAU,CAAd;AADwB,QAEhBC,KAFgB,GAENH,IAAII,IAFE,CAEhBD,KAFgB;;AAGxB,QAAME,gBAAgBF,MAAMG,MAA5B;AACA,QAAMC,cAAc,EAApB;AACAJ,UAAMK,OAAN;AAAA,0FAAc,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACJC,yBADI,GACuBD,IADvB,CACJC,SADI,EACOC,WADP,GACuBF,IADvB,CACOE,WADP;AAENC,uBAFM,GAEI,IAAIC,eAAJ,CAASJ,IAAT,CAFJ;AAAA;AAAA;AAAA,uBAIWG,QAAQb,UAAR,EAJX;;AAAA;AAIJe,sBAJI;AAAA;AAAA,uBAKJC,mBAAQC,qBAAR,CAA8BN,SAA9B,EAAyCC,WAAzC,CALI;;AAAA;AAMVJ,4BAAYU,IAAZ,CAAiBH,MAAjB;AACAZ,2BAAW,CAAX;AAPU;AAAA;;AAAA;AAAA;AAAA;AAAA,iDASHD,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,YAAMA,OAAjC,EAArB,CATG;;AAAA;AAAA,sBAWRnB,YAAYG,aAXJ;AAAA;AAAA;AAAA;;AAAA,iDAYHJ,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,2BAAS,IADiB;AAE1BC,2BAAS,qCAFiB;AAG1BC,wBAAMf;AAHoB,iBAArB,CAZG;;AAAA;AAAA,iDAkBL,IAlBK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAd;;AAAA;AAAA;AAAA;AAAA;AAoBD,GA1BY;;AA4BbgB;AAAA,yFAAa,kBAAOvB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BACUD,IAAIwB,IADd,EACHC,EADG,aACHA,EADG,EACCC,IADD,aACCA,IADD;;AAAA,oBAEPA,SAAS,OAFF;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAIcb,gBAAKc,gBAAL,EAJd;;AAAA;AAIDb,oBAJC;;AAAA,oBAKHA,OAAOR,MAAP,KAAkB,CALf;AAAA;AAAA;AAAA;;AAAA,gDAMEL,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,wBAA3B,EAArB,CANF;;AAAA;AAAA,gDAQApB,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,IAAX,EAAiBE,MAAMR,MAAvB,EAArB,CARA;;AAAA;AAAA;AAAA;AAAA,gDAUAb,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,aAAMA,OAAjC,EAArB,CAVA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAccR,gBAAKe,oBAAL,CAA0BH,EAA1B,CAdd;;AAAA;AAcDX,qBAdC;;AAAA,oBAeHA,QAAOR,MAAP,KAAkB,CAff;AAAA;AAAA;AAAA;;AAAA,gDAgBEL,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,wBAA3B,EAArB,CAhBF;;AAAA;AAAA,gDAkBApB,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,IAAX,EAAiBE,MAAMR,OAAvB,EAArB,CAlBA;;AAAA;AAAA;AAAA;AAAA,gDAoBAb,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,aAAMA,OAAjC,EAArB,CApBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA5Ba;;AAqDbQ;AAAA,yFAAa,kBAAO7B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEDwB,gBAFC,GAEMzB,IAAI8B,MAFV,CAEDL,EAFC;AAAA;AAAA,qBAGYZ,gBAAKgB,WAAL,CAAiBJ,EAAjB,CAHZ;;AAAA;AAGHX,oBAHG;;AAAA,kBAIJA,MAJI;AAAA;AAAA;AAAA;;AAAA,gDAKAb,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,uBAA3B,EAArB,CALA;;AAAA;AAAA,gDAOFpB,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,IAAX,EAAiBE,MAAMR,MAAvB,EAArB,CAPE;;AAAA;AAAA;AAAA;AAAA,gDASFb,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,aAAMA,OAAjC,EAArB,CATE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;;AAAA;AAAA;AArDa,C","file":"salescontroller.js","sourcesContent":["import Sale from '../models/Sales';\nimport Product from '../models/Products';\n\nexport default {\n  createSale: (req, res) => {\n    let counter = 0;\n    const { sales } = req.body;\n    const productLength = sales.length;\n    const resultArray = [];\n    sales.forEach(async (sale) => {\n      const { productId, newQuantity } = sale;\n      const newSale = new Sale(sale);\n      try {\n        const result = await newSale.createSale();\n        await Product.updateProductQuantity(productId, newQuantity);\n        resultArray.push(result);\n        counter += 1;\n      } catch (error) {\n        return res.status(500).send({ success: false, message: error.message });\n      }\n      if (counter === productLength) {\n        return res.status(201).send({\n          success: true,\n          message: 'Transaction completed successfully.',\n          data: resultArray,\n        });\n      }\n      return true;\n    });\n  },\n\n  getAllSales: async (req, res) => {\n    const { id, role } = req.user;\n    if (role === 'admin') {\n      try {\n        const result = await Sale.getAllSalesAdmin();\n        if (result.length === 0) {\n          return res.status(200).send({ success: false, message: 'No sales available yet' });\n        }\n        return res.status(200).send({ success: true, data: result });\n      } catch (error) {\n        return res.status(500).send({ success: false, message: error.message });\n      }\n    } else {\n      try {\n        const result = await Sale.getAllSalesAttendant(id);\n        if (result.length === 0) {\n          return res.status(200).send({ success: false, message: 'No sales available yet' });\n        }\n        return res.status(200).send({ success: true, data: result });\n      } catch (error) {\n        return res.status(500).send({ success: false, message: error.message });\n      }\n    }\n  },\n\n  getSaleById: async (req, res) => {\n    try {\n      const { id } = req.params;\n      const result = await Sale.getSaleById(id);\n      if (!result) {\n        return res.status(400).send({ success: false, message: 'Sale record not found' });\n      }\n      return res.status(200).send({ success: true, data: result });\n    } catch (error) {\n      return res.status(500).send({ success: false, message: error.message });\n    }\n  },\n};\n"]}