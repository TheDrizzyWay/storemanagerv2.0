{"version":3,"sources":["../../../api/v1/middleware/authmiddleware.js"],"names":["requireAuth","req","res","next","authHeader","headers","authorization","status","send","success","message","token","split","hashes","verifyToken","decoded","user","adminAuth","role","attendantAuth"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;AAEO,IAAMA;AAAA,sFAAc,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,sBADmB,GACNH,IAAII,OAAJ,CAAYC,aADN;;AAAA,kBAErB,OAAOF,UAAP,KAAsB,WAFD;AAAA;AAAA;AAAA;;AAGvBF,gBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,+BAA3B,EAArB;AAHuB;;AAAA;AAOnBC,iBAPmB,GAOXP,WAAWQ,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAPW;;AAAA,gBAQpBD,KARoB;AAAA;AAAA;AAAA;;AASvBT,gBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,+BAA3B,EAArB;AATuB;;AAAA;AAAA;AAAA;AAAA,mBAcDG,iBAAOC,WAAP,CAAmBH,KAAnB,CAdC;;AAAA;AAcjBI,mBAdiB;;AAevBd,gBAAIe,IAAJ,GAAWD,OAAX;AACAZ;AAhBuB;AAAA;;AAAA;AAAA;AAAA;;AAkBvBD,gBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,uBAA3B,EAArB;;AAlBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAsBA,IAAMO,gCAAY,SAAZA,SAAY,CAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,MACnCe,IADmC,GAC1BjB,IAAIe,IADsB,CACnCE,IADmC;;AAE3C,MAAIA,SAAS,OAAb,EAAsB;AACpB,WAAOhB,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,iCAA3B,EAArB,CAAP;AACD;AACD,SAAOP,MAAP;AACD,CANM;;AAQA,IAAMgB,wCAAgB,SAAhBA,aAAgB,CAAClB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,MACvCe,IADuC,GAC9BjB,IAAIe,IAD0B,CACvCE,IADuC;;AAE/C,MAAIA,SAAS,WAAb,EAA0B;AACxB,WAAOhB,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,SAAS,qCAA3B,EAArB,CAAP;AACD;AACD,SAAOP,MAAP;AACD,CANM","file":"authmiddleware.js","sourcesContent":["import hashes from './hashes';\n\nexport const requireAuth = async (req, res, next) => {\n  const authHeader = req.headers.authorization;\n  if (typeof authHeader === 'undefined') {\n    res.status(401).send({ success: false, message: 'Unauthorized - Header Not Set' });\n    return;\n  }\n\n  const token = authHeader.split(' ')[1];\n  if (!token) {\n    res.status(401).send({ success: false, message: 'Access Denied. Please Log In.' });\n    return;\n  }\n\n  try {\n    const decoded = await hashes.verifyToken(token);\n    req.user = decoded;\n    next();\n  } catch (error) {\n    res.status(500).send({ success: false, message: 'Error verifying user.' });\n  }\n};\n\nexport const adminAuth = (req, res, next) => {\n  const { role } = req.user;\n  if (role !== 'admin') {\n    return res.status(403).send({ success: false, message: 'Access Denied. For Admins only.' });\n  }\n  return next();\n};\n\nexport const attendantAuth = (req, res, next) => {\n  const { role } = req.user;\n  if (role !== 'attendant') {\n    return res.status(403).send({ success: false, message: 'Access Denied. For attendants only.' });\n  }\n  return next();\n};\n"]}